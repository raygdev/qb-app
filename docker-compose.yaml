version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
      - DB_USERNAME=root
      - DB_PASSWORD=rootpassword
    env_file:
      - .env  # Pointing to the .env file in the root directory
    depends_on:
      - redis
      - mongo
    expose:
      - "3000"  # Expose the backend service to the internal network (Nginx will proxy this)
    volumes:
      - .:/app  # Mount the local directory to the container for code updates during development
      - /app/node_modules #Exclude node_modules from being overridden
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis-data:/data  # Redis data persistence
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - mongo-data:/data/db  # MongoDB data persistence
    networks:
      - app-network

  nginx:
    image: nginx:alpine  # Use official Nginx image
    container_name: nginx
    ports:
      - "80:80"  # Expose Nginx to port 80 on the host
    depends_on:
      - backend
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro  # Mount the custom Nginx config
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  mongo-data:
